name: Create Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Select release type'
        required: true
        type: choice
        options:
          - Development
          - Hotfix
          - Minor Release
          - Major Release
        default: 'Development'

jobs:
  create-release:
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install Python
        run: uv python install 3.13

      - name: Install dependencies
        run: uv sync --extra dev

      - name: Bump version and build package
        run: |
          case "${{ github.event.inputs.release_type }}" in
            "Development")
              VERSION=$(uv run semantic-release version --print-last-released | tail -1)
              if [[ "$VERSION" == *dev* ]]; then
                uv run semantic-release version --prerelease --prerelease-token dev --no-changelog
              else
                uv run semantic-release version --as-prerelease --patch --prerelease-token dev  --no-changelog
              fi
              ;;
            "Major Release")
              uv run semantic-release version --major  --no-changelog
              ;;
            "Minor Release")
              uv run semantic-release version --minor  --no-changelog
              ;;
            "Hotfix")
              # Remove local dev tags to ensure patch increments from last stable release
              git tag -d $(git tag -l | grep -E "dev") 2>/dev/null || true
              uv run semantic-release version --patch  --no-changelog
              ;;
          esac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to PyPI
        run: uv publish

  publish-documentation:
    runs-on: ubuntu-latest
    needs: [create-release]
    if: github.event.inputs.release_type != 'Development'
    permissions:
      contents: read
      actions: write

    steps:
      - name: Trigger documentation workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: docs.yml
          ref: ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
